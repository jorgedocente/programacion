/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.chat.tcp;

import java.awt.*;
import javax.swing.GroupLayout;
import static com.chat.tcp.ClienteChat.jTFMensaje;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

/**
 *
 * @author jorge
 */
public class ClienteChat extends JFrame implements ActionListener, Runnable {

    TCPClient tcpc;
    private static final long serialVersionUID = 1L;
    static JTextField jTFMensaje = new JTextField();
    private final JScrollPane scrollpanel;
    static JTextArea textareal;
    JButton jBEnviar = new JButton("Enviar");
    JButton jBDesconectar = new JButton("Salir");
    boolean repetir = true;
    /**
     * Creates new form ClienteChat1
     */
    public ClienteChat(TCPClient tcpc) {
        super(" CONEXIÓN DEL CLIENTE CHAT: " + tcpc.getNombre());
        initComponents();        
        this.tcpc = tcpc;
        setLayout(null);
        jTFMensaje.setBounds(10, 10, 400, 30);
        add(jTFMensaje);
        textareal = new JTextArea();
        scrollpanel = new JScrollPane(textareal);
        scrollpanel.setBounds(10, 50, 400, 300);
        add(scrollpanel);
        jBEnviar.setBounds(420, 10, 100, 30);
        add(jBEnviar);
        jBDesconectar.setBounds(420, 50, 100, 30);
        add(jBDesconectar);
        textareal.setEditable(false);
        jBEnviar.addActionListener(this);
        jBDesconectar.addActionListener(this);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - unknown
    private void initComponents() {

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        Container contentPane = getContentPane();

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGap(0, 400, Short.MAX_VALUE)
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGap(0, 300, Short.MAX_VALUE)
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ClienteChat1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ClienteChat1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ClienteChat1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ClienteChat1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ClienteChat1().setVisible(true);
//            }
//        });
//    }
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == jBEnviar) { // SE PULSA botón ENVIAR 
            String texto = tcpc.getNombre() + "> " + jTFMensaje.getText();
            try {
                jTFMensaje.setText(""); //limpio area de mensaje 
                tcpc.enviar(texto);
            } catch (IOException ex) {
                System.out.println(ex);;
            }
        }
        if (e.getSource() == jBDesconectar) { // SE PULSA botón SALIR 
            try {
                repetir = false;
                tcpc.desConectar();
                this.dispose();
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }//



    @Override
    public void run() {
        String texto = "";
        while (repetir) {
            try {
                texto = tcpc.recibir();
                textareal.setText(texto);
            } catch (IOException e) {
                if (repetir) {
                    JOptionPane.showMessageDialog(null, "IMPOSIBLE CONECTAR CON EL SERVIDOR\n" + e.getMessage(), "<<MENSAJE DE ERROR:2>>", JOptionPane.ERROR_MESSAGE);
                    repetir = false;
                }
                this.dispose();
            }
        }// while

    }

    public static void main(String args[]) {
        ClienteChat cliente = null;
        TCPClient tcpc;
        String nombre, host;
        int puerto;
        do {
            nombre = JOptionPane.showInputDialog("Introduce tu nombre o nick:");
        } while (nombre.trim().equals(""));

        do {
            host = JOptionPane.showInputDialog("Introduce IP o hostname:");
        } while (host.trim().equals(""));

        do {
            puerto = Integer.parseInt(JOptionPane.showInputDialog("Introduce puerto:"));
        } while (puerto < 1 || puerto > 65535);

        try {
            tcpc = new TCPClient(host, puerto, nombre);

            try {
                tcpc.conectar();
                cliente = new ClienteChat(tcpc);
                cliente.setBounds(0, 0, 540, 400);
                cliente.setVisible(true);
                new Thread(cliente).start();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null,
                        "IMPOSIBLE CONECTAR CON EL SERVIDOR\n" + e.getMessage(), " ERROR : ", JOptionPane.ERROR_MESSAGE);
            }
        } 
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    "HOST DESCONOCIDO\n" + ex.getMessage(), " ERROR : ", JOptionPane.ERROR_MESSAGE);

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - unknown
    // End of variables declaration//GEN-END:variables
}
